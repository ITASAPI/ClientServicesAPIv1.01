FORMAT: 1A
HOST: http://yourITASserver:4715/

# ITAS IServices

## AccessToken [/AT]
Model Header containing AccessToken

+ Model
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

# Group ITAS Services Control
Endpoints to get and set the status of ITAS windows services. For full documentation please see: https://hivedome.sharepoint.com/ITAS-NG/ need to add remianing part of uri

# Group Service Controller Global
The Global service controller maintains a list of registered (window services) and has a central view of the statuses of all services.

## Check Status [/Service/CheckStatus/{ServiceName}]
`GET` Poll to get the latest status of a wondows service
### Check Service Status [GET]

|Property|Description|Type|Max Length|Notes|Constraint|
|--------|-----------|----|----------|-----|----------|
|ServiceName|Unique Name of Service|`string`|100||Required|
|MachineName|Machine Service is running on|`string`|100|||
|DisplayName|Display Name of Service|`string`|100|||
|Status|Status of Service|`string`|50||`Stopped`, `StartPending`, `StopPending`, `Running`, `ContinuePending`, `PausePending` or `Paused`|
|UserName|Principal Account Service Runs Under|`string`|50|||
|ProcessId|Process ID on Machine Running the Service|`number`|||`null` if the service is not running|
|LastStartDateTime|The Last Time the Service Started|`datetime`||Optional||
|Url|Enpoint to Directly Query a Service|`string`|255|Optional||

+ Request (application/json)
    + Header

            AccessToken:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

    + Attributes (ServiceController)


+ Parameters
    + ServiceName (required, string, `ITAS-NG Email Alert Poll Service`) ... The Unique name of the Service.


+ Response 200 (application/json)
    + Attributes (ServiceController)

+ Response 400 (application/json)
    + Attributes (400 ServiceResponse)

+ Response 404 (application/json)
    + Attributes (404 ServiceResponse)


## Register [/Service/Register]
`POST` This controller is used by services to register and update their details.
### Register Update Service [POST]

|Property|Description|Type|Max Length|Notes|Constraint|
|--------|-----------|----|----------|-----|----------|
|ServiceName|Unique Name of Service|`string`|100||Required|
|MachineName|Machine Service is running on|`string`|100|||
|DisplayName|Display Name of Service|`string`|100|||
|Status|Status of Service|`string`|50||`Stopped`, `StartPending`, `StopPending`, `Running`, `ContinuePending`, `PausePending` or `Paused`|
|UserName|Principal Account Service Runs Under|`string`|50|||
|ProcessId|Process ID on Machine Running the Service|`number`|||`null` if the service is not running|
|LastStartDateTime|The Last Time the Service Started|`datetime`||Optional||
|Url|Enpoint to Directly Query a Service|`string`|255|Optional||

+ Request (application/json)
    + Header

            AccessToken: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

    + Attributes (ServiceController)

+ Response 201 (application/json; charset=utf-8)
    + Attributes 
        + Data
            + ServiceName: `ITAS-NG Email Alert Poll Service` (string) 
        + Response (201 CreateResponse)

+ Response 400 (application/json; charset=utf-8)
    + Attributes (400 ServiceResponse)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (404 ServiceResponse)

## Unregister [/Service/Unregister/{ServiceName}]
`PUT` Unregister Service from the Global List
### Unregister Service [PUT]

+ Request (application/json)
    + Header

            AccessToken:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

+ Parameters
    + ServiceName (required, string, `ITAS-NG Email Alert Poll Service`) ... The Unique name of the Service.

+ Response 200 (application/json; charset=utf-8)
    + Attributes (200 SuccessResponse)
    
+ Response 400 (application/json; charset=utf-8)
    + Attributes (400 ServiceResponse)

+ Response 404 (application/json; charset=utf-8)
    + Attributes (404 ServiceResponse)

# Group Service Controller Local
Serve up status information directly without going via the agency of the Global Service Controller.

## Check Status [/Service/CheckStatus]
`GET` The latest status of the windows service that hosts the Local Service Controller
### Windows Service Status [GET]

|Property|Description|Type|Max Length|Notes|Constraint|
|--------|-----------|----|----------|-----|----------|
|ServiceName|Unique Name of Service|`string`|100||Required|
|MachineName|Machine Service is running on|`string`|100|||
|DisplayName|Display Name of Service|`string`|100|||
|Status|Status of Service|`string`|50||`Stopped`, `StartPending`, `StopPending`, `Running`, `ContinuePending`, `PausePending` or `Paused`|
|UserName|Principal Account Service Runs Under|`string`|50|||
|ProcessId|Process ID on Machine Running the Service|`number`|||`null` if the service is not running|
|LastStartDateTime|The Last Time the Service Started|`datetime`||Optional||
|Url|Enpoint to Directly Query a Service|`string`|255|Optional||

+ Request (application/json)
    + Header

            AccessToken:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

    + Attributes (ServiceController)

+ Response 200 (application/json)
    + Attributes (ServiceController)

+ Response 400 (application/json)
    + Attributes (400 ServiceResponse)

+ Response 404 (application/json)
    + Attributes (404 ServiceResponse)


# Group Key Value Pair Store

The Key Value Pair Store (kvpstore) allows users to store and retrieve arbitrary key/value pairs, organised into groups of similar keys.

## Collection of groups [/kvpstore]

### List all groups [GET]

+ Request
    [AccessToken][]

+ Response 200 (application/json)
    + Attributes (object)
        + groupsTotal: 2 (number)
        + data (array [KvpGroup List])

### Create new group [POST]

+ Request
    + Body

            {
                "groupName": "groupC",
                "groupDescription": "description for new group"
            }

    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg


+ Response 201 (application/json)
    + Attributes (KvpGroup)
        + keysTotal: 0 (number)


## Single group [/kvpstore/{groupName}]

+ Parameters
    + groupName (required, string, `groupA`) - ID of the group

### Get details of a group and list all its key/value pairs [GET]

+ Request
    [AccessToken][]

+ response 200 (application/json)
    + Attributes (KvpGroup)
        + keysTotal: 2 (number)
        + data (array [KvpKey])

### Create new key/value pair [POST]

+ Request
    + Body

            {
                "keyName": "key",
                "keyValue": "new sample string",
            }

    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg


+ response 201 (application/json)
    + Attributes (KvpKey)


### Delete a specific group [DELETE]

+ Request
    [AccessToken][]

+ Response 200 (application/json)
    + Attributes (KvpGroup)
        + response: deleted (string)
        + keysAffected: 2 (number)



## Single Key [/kvpstore/{groupName}/{keyName}]
+ Parameters
    + groupName (required, string, `groupA`) - ID of the group
    + keyName (required, string, `nameA`) ... Name of the key in a key/value pair


### Get a single key/value pair [GET]

+ Request
    [AccessToken][]

+ response 200 (application/json)
    + Attributes (KvpKey)


### Delete a specific key [DELETE]

+ Request
    [AccessToken][]

+ response 200 (application/json)
    + Attributes (KvpKey)
        + response: deleted (string)




# Group Physical Contract Metadata
Retrieve metadata and other information about ITAS Physical Contracts

## Query facets [/metadata/contract/{TradingEntityId}/physical/{Property}]
Define a subset of contracts from the whole list of contracts within a trading entity using OData filters or the request body. Retrieve distinct values for each property (eg all the departments that occur at least once in that subset).

### Get metadata [GET]

|property|description|type|max length|notes|constraint|
|--------|-----------|----|----------|-----|----------|
|Department|phys01_dept|array of `string`|4|||
|Counterparty|phys01_counterparty|array of `string`|10|||
|Trader|phys01_trader|array of `string`|3|||
|Commodity|phys01_commod|array of `string`|3|||
|Terminal|phys01_terminal|array of `string`|4|||
|ContractType|phys01_contype|array of `string`|1|||
|ThirdParty|phys01_thirdparty|array of `boolean`|1|||
|StockOwner|phys01_seller|array of `string`|10|||
|ContractDate|phys01_condate|`object`||Anonymous type (see response body)||


+ Request (application/json)
    + Header

            AccessToken:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg

    + Attributes (Physicals Metadata)


+ Parameters
    + TradingEntityId (required, string) - identify specific trading entity
    + Property (optional, enum[string]) - return only this group of facets
        + Members
            + Department (optional, string)
            + Counterparty (optional, string)
            + Trader (optional, string)
            + Commodity (optional, string)
            + Terminal (optional, string)
            + ContractType (optional, string)
            + ThirdParty (optional, string)
            + StockOwner (optional, string)
            + ContractDate (optional, string)

+ Response 200 (application/json)
    + Attributes (Physicals Metadata)

+ Response 400 (application/json)
    + Attributes (400 Response)

+ Response 404 (application/json)
    + Attributes (404 Response)


# Group Codes
Web services to support creating, reading and updating ITAS Codes

+ Response 200 (application/json)

# Group Data Object Definitions
List of re-usable Data Objects referenced as `object` types. Note that these endpoints are not accessable and only here for reference purposes.

# Data Structures

## 200 SuccessResponse (object)
+ Value: Success (string)

## 200 CreateResponse (object)
+ Value: Created (string)

## 200 AuthoriseResponse (object)
+ Value: Authorised (string)

## 201 CreateResponse (object)
+ Value: Created (string)

## 201 UpdateResponse (object)
+ Value: Updated (string)

## 400 Response (object)
+ Response
    + Value: 400 Bad Request (string)
+ Messages (array [400 ErrorMessageDetail])

## 400 BadPropertyResponse (object)
+ Response
    + Value: 400 Bad Request (string)
+ Messages (array[400 BadPropertyErrorMessageDetail])

## 400 ErrorMessageDetail (object)
+ Severity: Error (string)
+ Message: `API5058 - Data : The mandatory field {fieldName} was missing in the request body.` (string)

## 400 ServiceResponse (object)
+ Response
    + Value: 400 Bad Request (string)
+ Messages (400 ServiceResponseDetail)

## 400 ServiceResponseDetail (object)
+ Severity: Error (string)
+ Messages: `API5058 - Data : The mandatory field {fieldName} was missing.` (string)

## 400 WarningMessageDetail (object)
+ Severity: Warning (string)
+ Message: `API50xx - Data : The field {fieldName} was not found.` (string)

## 400 InfoMessageDetail (object)
+ Severity: Information (string)
+ Message: `API50xx - Data : Now create xyz.` (string)

## 400 BadPropertyErrorMessageDetail (object)
+ Severity: Error (string)
+ Message: `API5068 - API : The value sent in the querystring variable {Property} is not allowed.` (string)

## 404 Response (object)
+ Response
    + Value: 404 Objet not found (string)
+ Messages (array[404 ErrorMessageDetailMessage])

## 404 ServiceResponse (object)
+ Response
    + Value: 404 Objet not found (string)
+ Messages (404 ServiceResponseDetail)

## 404 ServiceResponseDetail (object)
+ Severity: Warning (string)
+ Message: `API5067 - API : The value {ServiceName} does not exist.` (string)

## 404 ErrorMessageDetailMessage (object)
+ Severity: Warning (string)
+ Message: `API5067 - API : The value {TradingEntityId} sent as the TradingEntitiyId does not exist.` (string)

## accessToken (object)
+ Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1bmlxdWVfbmFtZSI6ImRlZXBhayIsInN1YiI6ImRlZXBhayIsInJvbGUiOlsiNzk5YjhhNDEtYWI0ZS00MTBhLWI5MTktYzU3ZWFlMmFlMDI5IiwiZGVlcGFrIiwiQVNQLk5FVCBJZGVudGl0eSIsIjViNDE4ODE2LTI3ZjQtNGRlOC1iNmMyLTJlZTcxNjI3ZmJmYyIsIkFkbWluIiwiU3VwZXJBZG1pbiJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwMjciLCJhdWQiOiI4MjkzNjk0MjJmNzA0NTIzODUxZDk4NTU2YjZkNTQyYiIsImV4cCI6MTQ1OTQzMjk0MSwibmJmIjoxNDU5NDMxMTQxfQ.JgPGxt0Ok5baKx0YMXlO6D9kUYrCWM-Kma9b9iMW8tg (string)

## KvpKey (object)
+ keyName: nameA (string)
+ keyValue: sample string (string)
+ keyUrl: kvpstore/groupA/nameA
+ groupName: groupA (string)
+ groupDescription: sample string value  (string)
+ groupID: 1 (number)
+ groupUrl: kvpstore/groupA (string)

## KvpKey List (object)
+ keyName: nameA (string)
+ keyValue: sample string (string)
+ keyUrl: kvpstore/groupA/nameA

## KvpGroup (object)
+ groupName: groupC (string)
+ groupID: 3 (number)
+ groupDescription: description for new group (string)
+ groupUrl: /kvpstore/groupC (string)

## KvpGroup List (object)
+ groupName: groupC (string)
+ groupID: 3 (number)
+ groupUrl: /kvpstore/groupC (string)

## Physicals Metadata (object)
+ Department (array [string])
+ Counterparty (array [string])
+ Trader (array [string])
+ Commodity (array [string])
+ Terminal (array [string])
+ ContractType (array [string])
+ Third Party (array [string])
+ StockOwner (array [string])
+ ContractDate (object)
    + Oldest: 1980-02-31T00:00:00Z (string)
    + Newest: 2012-08-01T00:00:00Z (string)

## Pagination (object)
+ Total: 547 (number) - total number of records available
+ Top: 200 (number) - max number returned per message
+ Skip: 400 (number) - number of records skipped
+ Returned: 146 (number) - actual number returned

## ServiceController (object)
+ ServiceName: `ITAS-NG Email Alert Poll Service` (string)
+ MachineName: `HDMCLOUD-DEV06` (string)
+ DisplayName: `ITAS-NG Email Alert Poll Service` (string)
+ Status: Running (string)
+ UserName: HIVEDOME\\MBanachiewicz (string)
+ ProcessId: 13896 (number)
+ LastStartDateTime: `2016-06-27T09:24:54` (string)
+ Url: null (string)


